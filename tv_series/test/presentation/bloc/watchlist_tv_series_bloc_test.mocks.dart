// Mocks generated by Mockito 5.0.16 from annotations
// in tv_series/test/presentation/bloc/watchlist_tv_series_bloc_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i5;

import 'package:tv_series/domain/usecases/tv_series_usecases/get_watchlist_status_tv_series.dart'
    as _i8;
import 'package:tv_series/domain/usecases/tv_series_usecases/remove_watchlist_tv_series.dart'
    as _i11;
import 'package:tv_series/domain/usecases/tv_series_usecases/save_watchlist_tv_series.dart'
    as _i9;
import 'package:core/utils/failure.dart' as _i6;
import 'package:dartz/dartz.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;
import 'package:tv_series/domain/entities/tv_series_entities/tv_series.dart'
    as _i7;
import 'package:tv_series/domain/entities/tv_series_entities/tv_series_detail.dart'
    as _i10;
import 'package:tv_series/domain/repositories/tv_series_repositories/tv_series_repository.dart'
    as _i3;
import 'package:tv_series/domain/usecases/tv_series_usecases/get_watchlist_tv_series.dart'
    as _i4;

// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types

class _FakeEither_0<L, R> extends _i1.Fake implements _i2.Either<L, R> {}

class _FakeTVSeriesRepository_1 extends _i1.Fake
    implements _i3.TVSeriesRepository {}

/// A class which mocks [GetWatchlistTVSeries].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetWatchlistTVSeries extends _i1.Mock
    implements _i4.GetWatchlistTVSeries {
  MockGetWatchlistTVSeries() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.Future<_i2.Either<_i6.Failure, List<_i7.TVSeries>>> execute() =>
      (super.noSuchMethod(Invocation.method(#execute, []),
              returnValue:
                  Future<_i2.Either<_i6.Failure, List<_i7.TVSeries>>>.value(
                      _FakeEither_0<_i6.Failure, List<_i7.TVSeries>>()))
          as _i5.Future<_i2.Either<_i6.Failure, List<_i7.TVSeries>>>);
  @override
  // ignore: unnecessary_overrides
  String toString() => super.toString();
}

/// A class which mocks [GetWatchListStatusTVSeries].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetWatchListStatusTVSeries extends _i1.Mock
    implements _i8.GetWatchListStatusTVSeries {
  MockGetWatchListStatusTVSeries() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.TVSeriesRepository get repository =>
      (super.noSuchMethod(Invocation.getter(#repository),
          returnValue: _FakeTVSeriesRepository_1()) as _i3.TVSeriesRepository);
  @override
  _i5.Future<bool> execute(int? id) =>
      (super.noSuchMethod(Invocation.method(#execute, [id]),
          returnValue: Future<bool>.value(false)) as _i5.Future<bool>);
  @override
  // ignore: unnecessary_overrides
  String toString() => super.toString();
}

/// A class which mocks [SaveWatchlistTVSeries].
///
/// See the documentation for Mockito's code generation for more information.
class MockSaveWatchlistTVSeries extends _i1.Mock
    implements _i9.SaveWatchlistTVSeries {
  MockSaveWatchlistTVSeries() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.TVSeriesRepository get repository =>
      (super.noSuchMethod(Invocation.getter(#repository),
          returnValue: _FakeTVSeriesRepository_1()) as _i3.TVSeriesRepository);
  @override
  _i5.Future<_i2.Either<_i6.Failure, String>> execute(
          _i10.TVSeriesDetail? tvSeries) =>
      (super.noSuchMethod(Invocation.method(#execute, [tvSeries]),
              returnValue: Future<_i2.Either<_i6.Failure, String>>.value(
                  _FakeEither_0<_i6.Failure, String>()))
          as _i5.Future<_i2.Either<_i6.Failure, String>>);
  @override
  // ignore: unnecessary_overrides
  String toString() => super.toString();
}

/// A class which mocks [RemoveWatchlistTVSeries].
///
/// See the documentation for Mockito's code generation for more information.
class MockRemoveWatchlistTVSeries extends _i1.Mock
    implements _i11.RemoveWatchlistTVSeries {
  MockRemoveWatchlistTVSeries() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.TVSeriesRepository get repository =>
      (super.noSuchMethod(Invocation.getter(#repository),
          returnValue: _FakeTVSeriesRepository_1()) as _i3.TVSeriesRepository);
  @override
  _i5.Future<_i2.Either<_i6.Failure, String>> execute(
          _i10.TVSeriesDetail? tvSeries) =>
      (super.noSuchMethod(Invocation.method(#execute, [tvSeries]),
              returnValue: Future<_i2.Either<_i6.Failure, String>>.value(
                  _FakeEither_0<_i6.Failure, String>()))
          as _i5.Future<_i2.Either<_i6.Failure, String>>);
  @override
  // ignore: unnecessary_overrides
  String toString() => super.toString();
}
